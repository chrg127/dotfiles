# A is for automatic expansion
# r is for regular expressions inside snippets
# b is for expanding only at the beginning of a line
# i "expands snippets regardless of where trigger is typed"

snippet it "italic text"
\textit{$1} $2
endsnippet

snippet tii "same as ^ but for visual"
\textit{${1:${VISUAL:}}}$0
endsnippet

snippet bf "bold text"
\textbf{$1} $2
endsnippet

snippet href "urls"
\href{${1:url}}{${2:display name}}$0
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
$0
\end{$1}
endsnippet

snippet verb "\verb||"
\verb|$1|
endsnippet

snippet fig "figure" bA
\begin{figure}[h]
    \centering
    \includegraphics[$1]{$2}
    \caption{$3}
    \label{$4}
\end{figure}$5
endsnippet

snippet listing "code listings" bA
\begin{lstlisting}$1
$2
\end{lstlisting}$3
endsnippet

snippet mk "inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "math" wA
\[
$1
.\] $0
endsnippet

# subscripts such as a_1, a_2, etc.
snippet '([A-Za-z])(\d)' "auto subscript"
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2"
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

# superscripts (x^2, x^3, x^{4}, x^{5}, etc.)
snippet sr "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet compl "complement" iA
^{c}
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet

# // => \frac{}{}
# snippet // "Fraction"
# \\frac{$1}{$2}$0
# endsnippet

# 3/ => \frac{3}{}
# snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
# \\frac{`!p snip.rv = match.group(1)`}{$1}$0
# endsnippet

# snippet / "Fraction" iA
# \\frac{${VISUAL}}{$1}$0
# endsnippet

# priority 10
# snippet "bar" "bar" riA
# \overline{$1}$0
# endsnippet

# priority 100
# snippet "([a-zA-Z])bar" "bar" riA
# \overline{`!p snip.rv=match.group(1)`}
# endsnippet

# priority 10
# snippet "hat" "hat" riA
# \hat{$1}$0
# endsnippet

# priority 100
# snippet "([a-zA-Z])hat" "hat" riA
# \hat{`!p snip.rv=match.group(1)`}
# endsnippet

# snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
# \vec{`!p snip.rv=match.group(1)`}
# endsnippet

