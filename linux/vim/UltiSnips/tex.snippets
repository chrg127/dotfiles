#snippet beg "begin{} / end{}" bA
snippet beg "begin{} / end{}"
\begin{$1}
$0
\end{$1}
endsnippet

snippet simple
\documentclass[a4paper,12pt]{report}
\usepackage{graphicx} 		% images
\usepackage[utf8]{inputenc}	% encoding: UTF-8
\usepackage[italian]{babel}	% language
\usepackage[margin=0.5in, includefoot]{geometry}	% margin
\usepackage{scrextend}		% KOMA scripts?
\usepackage{array}			% table width
\usepackage[table]{xcolor}	% table colors
\usepackage{tocloft}			% table of contents
\usepackage{hyperref}			% hyperlinks inside document
\usepackage[italian]{cleveref}	% ^
\usepackage[section]{placeins}
\usepackage{float}
\usepackage{listings}
\usepackage{color}

\title{ \Huge \textbf{Title} }
\author{Christian Ricci}

\begin{document}
\maketitle
\tableofcontents
$0
\end{document}
endsnippet

# snippet mk "Math" wA
# $${1}$`!p
# if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
#     snip.rv = ' '
# else:
#     snip.rv = ''
# `$2
# endsnippet

# snippet dm "Math" wA
# \[
# $1
# .\] $0
# endsnippet

# snippet '([A-Za-z])(\d)' "auto subscript" wrA
# `!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
# endsnippet

# snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
# `!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
# endsnippet

# snippet sr "^2" iA
# ^2
# endsnippet

# snippet cb "^3" iA
# ^3
# endsnippet

# snippet compl "complement" iA
# ^{c}
# endsnippet

# snippet td "superscript" iA
# ^{$1}$0
# endsnippet

# snippet // "Fraction" iA
# \\frac{$1}{$2}$0
# endsnippet

# snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
# \\frac{`!p snip.rv = match.group(1)`}{$1}$0
# endsnippet

# snippet / "Fraction" iA
# \\frac{${VISUAL}}{$1}$0
# endsnippet

# priority 10
# snippet "bar" "bar" riA
# \overline{$1}$0
# endsnippet

# priority 100
# snippet "([a-zA-Z])bar" "bar" riA
# \overline{`!p snip.rv=match.group(1)`}
# endsnippet

# priority 10
# snippet "hat" "hat" riA
# \hat{$1}$0
# endsnippet

# priority 100
# snippet "([a-zA-Z])hat" "hat" riA
# \hat{`!p snip.rv=match.group(1)`}
# endsnippet

# snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
# \vec{`!p snip.rv=match.group(1)`}
# endsnippet
